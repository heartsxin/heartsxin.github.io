<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>heartsxin</title>
  <subtitle>哈特斯星，茫茫宇宙中的一颗星</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://heartsxin.coding.me/"/>
  <updated>2017-06-02T07:07:24.998Z</updated>
  <id>http://heartsxin.coding.me/</id>
  
  <author>
    <name>heartsxin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>实用工具及网站</title>
    <link href="http://heartsxin.coding.me/2017/06/02/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7%E5%8F%8A%E7%BD%91%E7%AB%99/"/>
    <id>http://heartsxin.coding.me/2017/06/02/实用工具及网站/</id>
    <published>2017-06-02T07:06:17.000Z</published>
    <updated>2017-06-02T07:07:24.998Z</updated>
    
    <summary type="html">
    
      无描述
    
    </summary>
    
      <category term="study" scheme="http://heartsxin.coding.me/categories/study/"/>
    
    
      <category term="study" scheme="http://heartsxin.coding.me/tags/study/"/>
    
  </entry>
  
  <entry>
    <title>github+hexo博客的主题安装及优化</title>
    <link href="http://heartsxin.coding.me/2017/05/30/github-hexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BC%98%E5%8C%96/"/>
    <id>http://heartsxin.coding.me/2017/05/30/github-hexo博客的主题安装及优化/</id>
    <published>2017-05-30T10:34:59.000Z</published>
    <updated>2017-05-30T14:45:35.694Z</updated>
    
    <content type="html"><![CDATA[<p>之间通过github+hexo搭建个人博客虽然已经初步完成，但是页面却不是很美观，在<a href="https://hexo.io/themes/" target="_blank" rel="external">hexo官网</a>有很多比较不错的主题推荐，可以在上面选择自己喜欢的主题，然后进行相应的个性化修改，这是我使用的主题<a href="https://github.com/yscoder/hexo-theme-indigo" target="_blank" rel="external">indigo</a>，下面我也是用这个主题作为教程。<br><a id="more"></a></p>
<h2 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装"></a>主题安装</h2><p>选择一款自己喜欢的主题，这将成为你个人博客模版。<a href="https://github.com/yscoder/hexo-theme-indigo/wiki/%E5%AE%89%E8%A3%85" target="_blank" rel="external">这里是主题安装的教程</a>，下面是我安装时的经验及个人见解。</p>
<h3 id="主题安装-1"><a href="#主题安装-1" class="headerlink" title="主题安装"></a>主题安装</h3><p>安装需确认你的 Hexo 版本在 3.0 以上，以及 Node 版本为 6.x 以上，在 Hexo 根目录，执行以下命令。</p>
<pre><code>git clone git@github.com:yscoder/hexo-theme-indigo.git themes/indigo
</code></pre><blockquote>
<p>这个命令要在博客文件夹的根目录右击鼠标打开Git Bash输入命令，其中themes/indigo就是会在博客文件夹根目录中的themes新建一个indigo文件夹存放clone下来的主题，以后的主题通常都是存放在这个目录下。<br>通俗来说就是这样git clone +通过主题的github中获取的URL+ +themes/indigo</p>
</blockquote>
<p>下图是获取URL的方式：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://oqlrsmf3l.bkt.clouddn.com/image/blog/github+hexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BC%98%E5%8C%96hexo%E4%B8%8B%E8%BD%BD%E4%B8%BB%E9%A2%98.png" alt="获取URL" title="">
                </div>
                <div class="image-caption">获取URL</div>
            </figure>
<h3 id="依赖安装"><a href="#依赖安装" class="headerlink" title="依赖安装"></a>依赖安装</h3><p>教程中的“切换主题”我没有懂，似乎不做也行，没有切换主题的效果。直接到依赖安装，安装一些插件。</p>
<h4 id="安装Less"><a href="#安装Less" class="headerlink" title="安装Less"></a>安装Less</h4><p>主题默认使用 less 作为 css 预处理工具。</p>
<pre><code>npm install hexo-renderer-less --save
</code></pre><h4 id="安装Feed"><a href="#安装Feed" class="headerlink" title="安装Feed"></a>安装Feed</h4><p>用于生成 rss，但是我现在还不知道rss是干什么的，先跟着教程来。</p>
<pre><code>npm install hexo-generator-feed --save
</code></pre><h4 id="Json-content"><a href="#Json-content" class="headerlink" title="Json-content"></a>Json-content</h4><p>用于生成静态站点数据，用作站内搜索的数据源。这个我也还不懂，后续完善吧。</p>
<pre><code>npm install hexo-generator-json-content --save
</code></pre><h4 id="QRCode"><a href="#QRCode" class="headerlink" title="QRCode"></a>QRCode</h4><p>用于生成微信分享二维码。网页分享中微信可以动态生成该网页的分享分二维码。</p>
<pre><code>npm install hexo-helper-qrcode --save
</code></pre><h3 id="Hexo配置修改"><a href="#Hexo配置修改" class="headerlink" title="Hexo配置修改"></a>Hexo配置修改</h3><p>修改hexo的默认配置及文件目录</p>
<h4 id="Hexo目录介绍"><a href="#Hexo目录介绍" class="headerlink" title="Hexo目录介绍"></a>Hexo目录介绍</h4><blockquote>
<p>.<br>├── .deploy       #需要部署的文件<br>├── node_modules  #Hexo插件<br>├── public        #生成的静态网页文件<br>├── scaffolds     #模板<br>├── source        #博客正文和其他源文件, 404 favicon CNAME 等都应该放在这里<br>|   ├── _drafts   #草稿<br>|   └── _posts    #文章<br>├── themes        #主题<br>├── _config.yml   #全局配置文件<br>└── package.json</p>
</blockquote>
<h4 id="Hexo新建文件"><a href="#Hexo新建文件" class="headerlink" title="Hexo新建文件"></a>Hexo新建文件</h4><p>其中layout可有可无，没有时会有默认的设置，PageName是自己设置文件名，其中layout是通过scaffolds中的.md文件进行配置的，scaffolds中默认会有drafts.md、post.md、page.md三个文件，这就是模版；也可以自己设置模版，其中只有通过page模版新建文件时，会在source文件夹下新建名为“PageName”的文件夹，并在自己生成的文件夹下生成名为“PageName.md”的文件。其他模版都会自动生成到_post文件夹下，_post文件夹下的文件会自动加载。</p>
<pre><code>hexo new [layout] &quot;PageName&quot;
</code></pre><h4 id="开启标签页"><a href="#开启标签页" class="headerlink" title="开启标签页"></a>开启标签页</h4><p>开启标签页，会新建一个文件夹，文件夹有一个index.md文件。</p>
<pre><code>hexo new page tags
</code></pre><p>修改 hexo/source/tags/index.md 的元数据</p>
<pre><code>layout: tags
 comments: false
 ---
</code></pre><h4 id="开启分类页"><a href="#开启分类页" class="headerlink" title="开启分类页"></a>开启分类页</h4><p>本主题中仅 card theme 支持。</p>
<pre><code>hexo new page categories
</code></pre><p>修改 hexo/source/categories/index.md 的元数据</p>
<pre><code>layout: categories
 comments: false
 ---
</code></pre><p>会自动生成文件夹 如图：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://oqlrsmf3l.bkt.clouddn.com/image/blog/github+hexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BC%98%E5%8C%96source%E6%96%87%E4%BB%B6%E5%A4%B9%E4%BB%8B%E7%BB%8D.png" alt="source文件夹介绍" title="">
                </div>
                <div class="image-caption">source文件夹介绍</div>
            </figure>
<h3 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h3><p>主题配置好之后就等着主题的切换了，下面来切换主题</p>
<h4 id="文件清理"><a href="#文件清理" class="headerlink" title="文件清理"></a>文件清理</h4><p>清理之前在public文件夹中生成的文件</p>
<pre><code>hexo clean
</code></pre><h4 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h4><p>在public文件夹中生成html、css、xml等前台静态文件。</p>
<pre><code>hexo g
</code></pre><h4 id="开启本地服务"><a href="#开启本地服务" class="headerlink" title="开启本地服务"></a>开启本地服务</h4><p>开启本地服务通过<a href="https://localhost:4000" target="_blank" rel="external">https://localhost:4000</a>访问。</p>
<pre><code>hexo s --debug
</code></pre><h4 id="上传到github"><a href="#上传到github" class="headerlink" title="上传到github"></a>上传到github</h4><pre><code>hexo d
</code></pre><blockquote>
<p>至此主题已经更改完成。但是我现在还是很不清楚github的用法，分支和回退的用法等；还有是就是hexo的一些详细操作，如何单独更新部分文件。</p>
</blockquote>
<h2 id="主题优化"><a href="#主题优化" class="headerlink" title="主题优化"></a>主题优化</h2><p>主题更换完成之后，接下来就是自己的个性化设置了，设置成自己想要达到的效果，下面我就大概说一下遇到困难的几个地方和我自己的见解吧。</p>
<h4 id="配置介绍"><a href="#配置介绍" class="headerlink" title="配置介绍"></a>配置介绍</h4><p>介绍一下配置文件的用处，<a href="https://github.com/yscoder/hexo-theme-indigo/wiki/%E9%85%8D%E7%BD%AE" target="_blank" rel="external">这里</a>已经介绍的很详细了。</p>
<h4 id="添加评论"><a href="#添加评论" class="headerlink" title="添加评论"></a>添加评论</h4><p>重点来了，因为某些情况，评论这一块我搞了好长一段时间，先来说一下添加评论吧，我这里添加的是第三方评论系统来必力。</p>
<h5 id="评论系统的选择"><a href="#评论系统的选择" class="headerlink" title="评论系统的选择"></a>评论系统的选择</h5><blockquote>
<p>由于主题之实现了多说和disqus的第三方评论功能，这里不配置<br>因为多说<strong>6月份要关闭了</strong>；disqus需要翻墙访问才行；还有友言不支持https协议，因为github使用的是https协议;网易云跟帖需要域名才行，所以Github Page不能用这个；搜狐畅言需要备案，更麻烦；其中还有一些像gitment和HashOver这两个没有去研究，不知道怎样。所以现在还是用了来必力，来必力<strong>的缺点就是加载有点慢</strong>。这里是<a href="http://thief.one/2017/03/03/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/" target="_blank" rel="external">原链接</a>。</p>
</blockquote>
<h5 id="indigo模版添加来必力"><a href="#indigo模版添加来必力" class="headerlink" title="indigo模版添加来必力"></a>indigo模版添加来必力</h5><p>在indigo主题模版中添加来必力评论系统。</p>
<h6 id="注册来必力"><a href="#注册来必力" class="headerlink" title="注册来必力"></a>注册来必力</h6><p>进入<a href="https://livere.com/" target="_blank" rel="external"> LiveRe</a>官网，注册账号。来必力是韩国的网站，注册的时候可能会有一些问题，多试几次。</p>
<blockquote>
<p>LiveRe(来必力) 有两个版本：</p>
<p>City 版：是一款适合所有人使用的免费版本；<br>Premium 版：是一款能够帮助企业实现自动化管理的多功能收费版本。<br>我们 City 版就够了。</p>
</blockquote>
<p>获取代码：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://oqlrsmf3l.bkt.clouddn.com/image/blog/github+hexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BC%98%E5%8C%96livere-get-code.png" alt="获取代码" title="">
                </div>
                <div class="image-caption">获取代码</div>
            </figure>
<h6 id="修改主题配置文件"><a href="#修改主题配置文件" class="headerlink" title="修改主题配置文件"></a>修改主题配置文件</h6><p>因为主题中没有配置来必力评论系统，所以我们要手动配置。</p>
<blockquote>
<p>在插件目录“myblog\themes\indigo\layout_partial\plugins”下新建一个名为“livere.ejs”的文件，这就是来必力插件。</p>
</blockquote>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://oqlrsmf3l.bkt.clouddn.com/image/blog/github+hexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BC%98%E5%8C%96add_livere01.png" alt="新建livers.ejs插件" title="">
                </div>
                <div class="image-caption">新建livers.ejs插件</div>
            </figure>
<pre><code>   &lt;% if (theme.livere_uid){ %&gt;
&lt;!-- 来必力City版安装代码 --&gt;
&lt;div id=&quot;lv-container&quot; data-id=&quot;city&quot; data-uid=&quot;MTAyMC8yODg4MC81NDUw&quot;&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    (function(d, s) {
   var j, e = d.getElementsByTagName(s)[0];

   if (typeof LivereTower === &apos;function&apos;) { return; }

   j = d.createElement(s);
   j.src = &apos;https://cdn-city.livere.com/js/embed.dist.js&apos;;
   j.async = true;

   e.parentNode.insertBefore(j, e);
    })(document, &apos;script&apos;);
&lt;/script&gt;
&lt;noscript&gt; 为正常使用来必力评论功能请激活JavaScript&lt;/noscript&gt;
&lt;/div&gt;
&lt;!-- City版安装代码已完成 --&gt;
&lt;% } %&gt;
</code></pre><p>在来必力中获取的代码替换一下即可。</p>
<blockquote>
<p>然后在“D:\forJavaStudy\myblog\themes\indigo\layout_partial\post”目录下修改“comment.ejs”文件，在文件末尾添加以下代码：</p>
</blockquote>
<pre><code>&lt;%- partial(&apos;../plugins/livere&apos;) %&gt;
</code></pre><blockquote>
<p>修改Hexo的配置文件，主题目录“myblog\themes\indigo”下的“_config.yml”文件，在评论部分添加如下代码，如下：</p>
</blockquote>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://oqlrsmf3l.bkt.clouddn.com/image/blog/github+hexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BC%98%E5%8C%96add_livere02.png" alt="修改comment.ejs" title="">
                </div>
                <div class="image-caption">修改comment.ejs</div>
            </figure>
<pre><code>livere_uid: MTAyMC8yODg4MC81NDUw
</code></pre><p>这样就完成了配置，更新一下即可。</p>
<pre><code>hexo clean
hexo g
hexo d
</code></pre><p>##总结<br>github学好了真的狠学到很多知识，只是我现在还不懂，所以就下来对上github上看看，加深对git的学习，在我的博客中对添加一些其他一些优秀博主的相关链接，有时候就是那些连接保存的不好，当时看到了，之后就没了。所以积累很重要。</p>
]]></content>
    
    <summary type="html">
    
      github+hexo制作的个人博客的主题更换及美化
    
    </summary>
    
      <category term="study" scheme="http://heartsxin.coding.me/categories/study/"/>
    
    
      <category term="study" scheme="http://heartsxin.coding.me/tags/study/"/>
    
      <category term="hexo" scheme="http://heartsxin.coding.me/tags/hexo/"/>
    
      <category term="github" scheme="http://heartsxin.coding.me/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>github+hexo制作个人博客</title>
    <link href="http://heartsxin.coding.me/2017/05/29/github-hexo%E5%88%B6%E4%BD%9C%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://heartsxin.coding.me/2017/05/29/github-hexo制作个人博客/</id>
    <published>2017-05-29T12:24:59.000Z</published>
    <updated>2017-05-30T14:41:16.710Z</updated>
    
    <content type="html"><![CDATA[<p>通过github的代码托管和hexo搭建个人博客<br><a id="more"></a></p>
<h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><p>  首先要把准备工作做好，前期的账号注册、软件安装、环境搭建</p>
<h3 id="注册github账号"><a href="#注册github账号" class="headerlink" title="注册github账号"></a>注册github账号</h3><p>直接到<a href="https://github.com" target="_blank" rel="external">github官网</a>注册账号即可<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://oqlrsmf3l.bkt.clouddn.com/%E5%88%9B%E5%BB%BAgithubpage.png" alt="github Page" title="">
                </div>
                <div class="image-caption">github Page</div>
            </figure><br>new repository，Repository name填写的和你的用户名相同，我觉得这个应该就是你的github Page了，我生成的链接 <a href="https://heartsxin.github.io/" target="_blank" rel="external">https://heartsxin.github.io/</a>。</p>
<blockquote>
<p>在此之前你要现在本地安装了git，我现在也不是很会用git，初学者而已，按照教程一步步做的。安装很简单用起来有点不会，毕竟都是英语的，对我来说很吃力。</p>
</blockquote>
<p>这是本地安装的git和github桌面版<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://oqlrsmf3l.bkt.clouddn.com/image/blog/github+hexo%E5%88%B6%E4%BD%9C%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%9C%AC%E5%9C%B0git%E8%BD%AF%E4%BB%B6.png" alt="git" title="">
                </div>
                <div class="image-caption">git</div>
            </figure><br>这位大神已经做的很不错，我就是在他的<a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external">廖雪峰</a>博客才懂了一些git的用法、</p>
<h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><blockquote>
<p>Hexo是基于Nodejs的静态博客系统，通过MackDowd编辑的.md文件会生成静态的html文件，所以在安装Hexo之前需要安装Nodejs</p>
<h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><h4 id="安装Node-js-1"><a href="#安装Node-js-1" class="headerlink" title="安装Node.js"></a>安装Node.js</h4><p>到官网下载<a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js官网</a>直接下载，按照步骤直接安装即可。</p>
<h4 id="Node-js环境配置"><a href="#Node-js环境配置" class="headerlink" title="Node.js环境配置"></a>Node.js环境配置</h4><p>说明：这里的环境配置主要配置的是npm安装的全局模块所在的路径，以及缓存cache的路径，之所以要配置，是因为以后在执行类似：npm install express [-g] （后面的可选参数-g，g代表global全局安装的意思）的安装语句时，会将安装的模块安装到【C:\Users\用户名\AppData\Roaming\npm】路径中，占C盘空间。<br>例如：我希望将全模块所在路径和缓存路径放在我node.js安装的文件夹中，则在我安装的文件夹【D:\Develop\nodejs】下创建两个文件夹【node_global】及【node_cache】如下图：</p>
</blockquote>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://oqlrsmf3l.bkt.clouddn.com/image/blog/github+hexo%E5%88%B6%E4%BD%9C%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2node_js%E6%96%87%E4%BB%B6%E5%A4%B9.png" alt="文件夹新建" title="">
                </div>
                <div class="image-caption">文件夹新建</div>
            </figure>
<p>新建文件夹之后在CMD窗口输入如下命令：</p>
<pre><code>npm config set prefix &quot;D:\Develop\nodejs\node_global&quot;
npm config set cache &quot;D:\Develop\nodejs\node_cache&quot;
</code></pre><p>输入代码后在新建的文件夹里面会生成相应的文件后文件夹，然后配置相应的环境变量，如下图所示：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://oqlrsmf3l.bkt.clouddn.com/image/blog/github+hexo%E5%88%B6%E4%BD%9C%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2node_js%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE.png" alt="环境配置01" title="">
                </div>
                <div class="image-caption">环境配置01</div>
            </figure><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://oqlrsmf3l.bkt.clouddn.com/image/blog/github+hexo%E5%88%B6%E4%BD%9C%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2node_js%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE02.png" alt="enter image description here" title="">
                </div>
                <div class="image-caption">enter image description here</div>
            </figure></p>
<p>配置完后，安装个module测试下，我们就安装最常用的express模块，打开cmd窗口，<br>输入如下命令进行模块的全局安装：</p>
<pre><code>npm install express -g     # -g是全局安装的意思
</code></pre><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://oqlrsmf3l.bkt.clouddn.com/image/blog/github+hexo%E5%88%B6%E4%BD%9C%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2node_js%E6%B5%8B%E8%AF%95.png" alt="环境配置02" title="">
                </div>
                <div class="image-caption">环境配置02</div>
            </figure>
<p>通过npm安装模块时都是去国外的镜像下载的，有的时候由于网络原因会导致安装模块失败，静静等待吧…</p>
<h3 id="安装Hexo-1"><a href="#安装Hexo-1" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>搭建好以上环境之后打开Git Bssh然后输入命令</p>
<h4 id="安装Hexo-2"><a href="#安装Hexo-2" class="headerlink" title="安装Hexo"></a>安装Hexo</h4><p>可以先去<a href="https://hexo.io/zh-cn/" target="_blank" rel="external">Hexo</a>官网去看看，下面的命令就是安装Hexo</p>
<pre><code>npm install hexo-cli -g #安装hexo
</code></pre><h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><p>现在新建你博客要存储的文件夹，如：“某位置/blog”，然后在该文件夹下右击鼠标，选择Git Bash Here，然后输入如下命令：</p>
<h5 id="初始化-1"><a href="#初始化-1" class="headerlink" title="初始化"></a>初始化</h5><pre><code>hexo init
</code></pre><p>然后输入</p>
<pre><code>npm install
</code></pre><h5 id="生成静态页面"><a href="#生成静态页面" class="headerlink" title="生成静态页面"></a>生成静态页面</h5><p>输入以下代码生成静态html代码，它是“hexo generate”的简写</p>
<pre><code>hexo g 
</code></pre><h4 id="本地启动"><a href="#本地启动" class="headerlink" title="本地启动"></a>本地启动</h4><p>输入以下代码本地启动服务，它是”hexo server“ 的简写</p>
<pre><code>hexo s
</code></pre><p>此时个人博客已经初步建成，在浏览器输入<a href="https://localhost:4000" target="_blank" rel="external"> https://localhost:4000</a>即可访问你的博客了，试试看…<br>它可能是这个样子，如下：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://oqlrsmf3l.bkt.clouddn.com/image/blog/github+hexo%E5%88%B6%E4%BD%9C%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2hexo%E5%8D%9A%E5%AE%A2%E5%88%9D%E5%A7%8B.png" alt="enter image description here" title="">
                </div>
                <div class="image-caption">enter image description here</div>
            </figure><br>这样已经初步完成个人博客的初步搭建</p>
<h4 id="上传至github"><a href="#上传至github" class="headerlink" title="上传至github"></a>上传至github</h4><p>修改博客根目录下的_config.yml，修改 Deployment部分。</p>
<pre><code># Deployment
## Docs: https://hexo.io/docs/deployment.html
# ssh://git@github.com/wenjunoy/wenjunoy.github.io
deploy: 
type: git
repo: ssh://git@github.com/wenjunoy/wenjunoy.github.io ##这个是你的仓库地址
branch: master
</code></pre><h4 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h4><pre><code>hexo d
</code></pre><p>成功之后，在浏览器中输入<a href="https://username.github.io/即可访问你的个人博客了，username是你的github用户名。" target="_blank" rel="external">https://username.github.io/即可访问你的个人博客了，username是你的github用户名。</a></p>
<p>##总结<br>这样就可以拥有一个你的个人博客了，博客可以在后续学习中慢慢的完善。</p>
]]></content>
    
    <summary type="html">
    
      自己用github+hexo搭建个人博客，记录一下，互相学习
    
    </summary>
    
      <category term="study" scheme="http://heartsxin.coding.me/categories/study/"/>
    
    
      <category term="hexo" scheme="http://heartsxin.coding.me/tags/hexo/"/>
    
      <category term="github" scheme="http://heartsxin.coding.me/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>MarkDown学习笔记</title>
    <link href="http://heartsxin.coding.me/2017/05/29/MarkDown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://heartsxin.coding.me/2017/05/29/MarkDown学习笔记/</id>
    <published>2017-05-29T11:37:24.000Z</published>
    <updated>2017-05-29T11:37:24.986Z</updated>
    
    <summary type="html">
    
      无描述
    
    </summary>
    
      <category term="study" scheme="http://heartsxin.coding.me/categories/study/"/>
    
    
      <category term="study" scheme="http://heartsxin.coding.me/tags/study/"/>
    
  </entry>
  
</feed>
